{
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "---\n",
        "title: \"Hazard-based distributional regression via ordinary differential equations: Breast cancer recurrence data\"\n",
        "author: '[F. Javier Rubio](https://sites.google.com/site/fjavierrubio67/)'\n",
        "date: today\n",
        "format:\n",
        "  html:\n",
        "    theme: flatly\n",
        "    code-fold: true\n",
        "    toc: true\n",
        "    number-sections: true\n",
        "execute:\n",
        "  kernel: julia\n",
        "  options:\n",
        "    threads: 8  # Set the number of threads here\n",
        "bibliography: references.bib\n",
        "---\n",
        "\n",
        "\n",
        "\n",
        "# Models\n",
        "\n",
        "In this application, we model the recurrence (relapse) times of $n=2,939$ breast cancer patients from the `rotterdam` dataset in the R package `survival`. This is an observational dataset which includes information on recurrence times and censoring indicators (due to death or end of follow-up). We consider the following covariates: \\texttt{age} (age at surgery, start of follow-up), `nodes` (number of positive lymph nodes), `size` (tumor size, dichotomised $0 =$ $\\leq 50$, $1 =$ $>50$), and `trt` (chemotherapy, binary). The maximum follow-up duration is $19.3$ years, with $52\\%$ of patients experiencing recurrence during the follow-up period. $580$ patients received chemotherapy, while $334$ patients also received hormonal treatment, with the majority ($306$) being on the non-chemotherapy group. \n",
        "\n",
        "Since some patients received treatment, it is reasonable to expect a reduction in the hazard associated with cancer recurrence. Consequently, we model this dataset using the hazard-response model, \n",
        "\n",
        "$$\n",
        "  \\begin{cases}\n",
        "h'(t)  =  \\lambda h(t) \\left(1 - \\dfrac{h(t)}{\\kappa}\\right) - \\alpha q(t) h(t), & h(0) = h_0 \\\\\n",
        "q'(t) =  \\mu q(t) \\left( 1- \\dfrac{q(t)}{\\kappa} \\right) -\\alpha q(t) h(t)  ,  &  q(0) = q_0 \\\\ \n",
        "H'(t)  =  h(t), & H(0) = 0,\n",
        "\\end{cases}\\begin{cases}\n",
        "h'(t)  =  \\lambda h(t) \\left(1 - \\dfrac{h(t)}{\\kappa}\\right) - \\alpha q(t) h(t), & h(0) = h_0 \\\\\n",
        "q'(t) =  \\mu q(t) \\left( 1- \\dfrac{q(t)}{\\kappa} \\right) -\\alpha q(t) h(t)  ,  &  q(0) = q_0 \\\\ \n",
        "H'(t)  =  h(t), & H(0) = 0,\n",
        "\\end{cases}\n",
        "$$\n",
        "  \n",
        "  incorporating covariates on the corresponding parameters as described in \n",
        "\n",
        "> Christen, J.A. and Rubio, F.J. (2025). Hazard-based distributional regression via ordinary differential equations. Submitted.\n",
        "\n",
        "This selected regression model includes: $(\\text{intercept}, \\texttt{nodes}, \\texttt{trt})$ for $\\lambda$, $(\\text{intercept}, \\texttt{nodes})$ for $\\kappa$, $(\\text{intercept}, \\texttt{nodes}, \\texttt{trt})$ for $\\alpha$, and $(\\text{intercept}, \\texttt{age}, \\texttt{size}, \\texttt{trt})$ for $\\mu$.\n",
        "\n",
        "################################################################################\n",
        "################################################################################\n",
        "# Julia code\n",
        "################################################################################\n",
        "################################################################################\n",
        "\n",
        "## Required packages\n"
      ],
      "id": "c4bfc26e"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "#=\n",
        "****************************************************************************\n",
        "Required packages\n",
        "****************************************************************************\n",
        "=#\n",
        "\n",
        "using Plots\n",
        "using DifferentialEquations\n",
        "using LinearAlgebra\n",
        "using CSV\n",
        "using LSODA\n",
        "using Optim\n",
        "using Distributions\n",
        "using Random\n",
        "using AdaptiveMCMC\n",
        "using Tables\n",
        "using DelimitedFiles\n",
        "using Statistics\n",
        "using Survival\n",
        "using DataFrames\n",
        "using FreqTables\n",
        "using Sundials\n",
        "using ForwardDiff\n",
        "using Turing\n",
        "using StatsPlots\n",
        "using StatsFuns\n",
        "using JLD2\n",
        "\n",
        "# Additional routines \n",
        "include(\"routines.jl\")"
      ],
      "id": "20e45b63",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "## Data preparation\n"
      ],
      "id": "65c76c52"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "#=\n",
        "****************************************************************************\n",
        "Data preparation\n",
        "****************************************************************************\n",
        "=#\n",
        "\n",
        "\n",
        "#= Data =#\n",
        "df_full = CSV.File(\"rotterdamFull.csv\");\n",
        "df0 = CSV.File(\"rotterdam.csv\");\n",
        "\n",
        "\n",
        "#= Data of interest =#\n",
        "size_bin = collect(df_full.size)\n",
        "sizes = zeros(size(size_bin)[1])\n",
        "\n",
        "for i in 1:size(size_bin)[1]\n",
        "    if size_bin[i] == \">50\"\n",
        "        sizes[i] = 1.0\n",
        "    else\n",
        "        sizes[i] = 0.0\n",
        "    end\n",
        "  end\n",
        "\n",
        "\n",
        "df = DataFrame( time = collect(df_full.rtime)./365.25, \n",
        "                status = collect(df_full.recur),\n",
        "                nodes = scale(collect(df_full.nodes)),\n",
        "                agec = scale(collect(df_full.age)),\n",
        "                sizes = sizes,\n",
        "                trt = convert(Vector{Float64}, collect(df_full.chemo)))\n",
        "\n",
        "# Removing inconsistent Data\n",
        "indcon = zeros(size(df_full)[1])\n",
        "for i in 1:size(df_full)[1]\n",
        "    if ((df_full.rtime[i] < df_full.dtime[i]) && (df_full.recur[i] == 0) && (df_full.death[i] == 1))\n",
        "        indcon[i] = 0\n",
        "    else\n",
        "        indcon[i] = 1\n",
        "    end\n",
        "end\n",
        "indcon = collect(Bool, (indcon))\n",
        "\n",
        "df = df[indcon,:]\n",
        "\n",
        "# Sorting df by time\n",
        "sorted_indices = sortperm(df[:, :time])\n",
        "\n",
        "df = df[sorted_indices,:]\n",
        "\n",
        "# Sample size\n",
        "n = size(df)[1]\n",
        "\n",
        "#= Vital status =#\n",
        "status = collect(Bool, (df.status));\n",
        "\n",
        "#= Survival times =#\n",
        "times = df.time;\n",
        "\n",
        "# Time grids\n",
        "tspan0 = hcat(zeros(n), df.time);\n",
        "\n",
        "tspan00 = vcat(0.0, df.time);\n",
        "tmax = maximum(df.time)\n",
        "\n",
        "# Initial conditions (h,q,H)\n",
        "u0 = [1.0e-2, 1.0e-6, 0.0]\n",
        "\n",
        "# Initial conditions (log h,log q,H)\n",
        "lu0 = [log(1.0e-2), log(1.0e-6), 0.0]\n",
        "\n",
        "#=\n",
        "****************************************************************************\n",
        "Data preparation for best model\n",
        "****************************************************************************\n",
        "=#\n",
        "\n",
        "# Design matrix including variables of interest for model building\n",
        "# age + sizes + nodes + trt\n",
        "des_full = hcat( df.agec, df.sizes, df.nodes, df.trt)\n",
        "  \n",
        "# Design matrices for the regression models for each parameter \n",
        "#(intercept,age,sizes,nodes,trt)\n",
        "# lambda: intercept + nodes + trt\n",
        "des_l = hcat(ones(n), des_full[:,3:4]);\n",
        "p_l = size(des_l)[2];\n",
        "# kappa: intercept + nodes\n",
        "des_k = hcat(ones(n), des_full[:,3]);\n",
        "p_k = size(des_k)[2];\n",
        "# alpha: intercept + nodes + trt\n",
        "des_a = hcat(ones(n), des_full[:,3:4]);\n",
        "p_a = size(des_a)[2];\n",
        "# beta: intercept + age + sizes + trt\n",
        "des_b = hcat(ones(n), des_full[:,[1,2,4]]);\n",
        "p_b = size(des_b)[2];\n",
        "\n",
        "# Intercept positions\n",
        "indint = [1, p_l + 1, p_l + p_k + 1, p_l + p_k + p_a + 1]\n",
        "indbeta = deleteat!(collect(1:(p_l+p_k+p_a+p_b)), indint)"
      ],
      "id": "e945cfab",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "# MLE vs. MCMC \n"
      ],
      "id": "a6c337b4"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "# Reading the MLE\n",
        "\n",
        "MLER = parse.(Float64, readlines(\"MLER.txt\"))\n",
        "\n",
        "# Reading the MCMC posterior sample\n",
        "\n",
        "postsamp_mcmc = CSV.read(\"postsamp_mcmc.csv\", Tables.matrix, header=true);\n",
        "\n",
        "\n",
        "# Reading the normal approximation posterior sample\n",
        "\n",
        "postsamp_app = readdlm(\"app_post_samples.txt\");\n",
        "\n",
        "# Comparison\n",
        "\n",
        "hcat(MLER, vec(mean(postsamp_app,dims=1)), vec(mean(postsamp_mcmc,dims=1)))"
      ],
      "id": "aa6426cd",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "# Visualising results\n",
        "plot_histograms_by_column(postsamp_mcmc)"
      ],
      "id": "6d1c2545",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "################################################################################\n",
        "################################################################################\n",
        "# MLE Analysis\n",
        "################################################################################\n",
        "################################################################################\n",
        "\n",
        "\n",
        "## Marginal survival probability of recurrence: Chemotherapy vs. No-Chemotherapy\n"
      ],
      "id": "1a5e7198"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "#=\n",
        "-------------------------------------------------------------------------------------------------- \n",
        "# Marginal Survival: Chemotherapy vs. No-Chemotherapy\n",
        "# Averaged over observed covariates, plug-in MLE.\n",
        "-------------------------------------------------------------------------------------------------- \n",
        "=#\n",
        "\n",
        "# Estimated parameters\n",
        "paramsHR_MLE = hcat( exp.(des_l * MLER[1:p_l]),\n",
        "                       exp.(des_k * MLER[(p_l+1):(p_l+p_k)]),\n",
        "                       exp.(des_a * MLER[(p_l+p_k+1):(p_l+p_k+p_a)]),\n",
        "                       exp.(des_b * MLER[(p_l+p_k+p_a+1):(p_l+p_k+p_a+p_b)]) )\n",
        "\n",
        "    \n",
        "#=\n",
        "====================================\n",
        "# No Chemotherapy group\n",
        "===================================\n",
        "=#\n",
        "\n",
        "indNT = findall(x->x==0, df.trt)\n",
        "nNT = length(indNT)\n",
        "\n",
        "\n",
        "\n",
        "# Marginal survival function\n",
        "function MNTSurv(t)\n",
        "    OUT = zeros(Float64, nNT, 3)\n",
        "    for i in 1:nNT\n",
        "        sol = solve(ODEProblem(HRJ, u0, t, paramsHR_MLE[indNT[i], :]), Tsit5())\n",
        "        OUT[i, :] = reduce(vcat, sol.u[end, :])\n",
        "    end\n",
        "\n",
        "    surp = mean(exp.(-OUT[:, 3]))\n",
        "\n",
        "    return surp\n",
        "\n",
        "end\n",
        "\n",
        "\n",
        "\n",
        "#=\n",
        "====================================\n",
        "# Chemotherapy group\n",
        "===================================\n",
        "=#\n",
        "\n",
        "indT = findall(x->x==1, df.trt)\n",
        "nT = length(indT)\n",
        "\n",
        "\n",
        "\n",
        "# Marginal survival function\n",
        "function MTSurv(t)\n",
        "    OUT = zeros(Float64, nT, 3)\n",
        "    for i in 1:nT\n",
        "        sol = solve(ODEProblem(HRJ, u0, t, paramsHR_MLE[indT[i], :]), Tsit5())\n",
        "        OUT[i, :] = reduce(vcat, sol.u[end, :])\n",
        "    end\n",
        "\n",
        "    surp = mean(exp.(-OUT[:, 3]))\n",
        "\n",
        "    return surp\n",
        "\n",
        "end\n",
        "\n",
        "\n",
        "\n",
        "# Kaplan-Meier estimator \n",
        "km_NT = fit(KaplanMeier, df.time[indNT], df.status[indNT])\n",
        "km_T = fit(KaplanMeier, df.time[indT], df.status[indT])\n",
        "\n",
        "ktimesNT = sort(unique(times[indNT]))\n",
        "ktimesT = sort(unique(times[indT]))\n",
        "ksurvival_probsNT = km_NT.survival\n",
        "ksurvival_probsT = km_T.survival\n",
        "\n",
        "# Comparison\n",
        "plot(ktimesNT, ksurvival_probsNT,\n",
        "    xlabel = \"Time (years)\", ylabel = \"Population Survival\", title = \"\",\n",
        "  xlims = (0.0001,maximum(times)),   xticks = 0:2:maximum(times), label = \"\", \n",
        "  xtickfont = font(16, \"Courier\"),  ytickfont = font(16, \"Courier\"),\n",
        "  xguidefontsize=18, yguidefontsize=18, linewidth=3,\n",
        "  linecolor = \"gray\", ylims = (0,1), linestyle=:solid)\n",
        "\n",
        "plot!(ktimesT, ksurvival_probsT,\n",
        "    xlabel = \"Time (years)\", ylabel = \"Population Survival\", title = \"\",\n",
        "  xlims = (0.0001,maximum(times)),   xticks = 0:2:maximum(times), label = \"\", \n",
        "  xtickfont = font(16, \"Courier\"),  ytickfont = font(16, \"Courier\"),\n",
        "  xguidefontsize=18, yguidefontsize=18, linewidth=3,\n",
        "  linecolor = \"gray\", ylims = (0,1), linestyle=:solid)\n",
        "\n",
        "\n",
        "plot!(t -> MNTSurv(t),\n",
        "    xlabel=\"Time (years)\", ylabel=\"Survival\", title=\"\",\n",
        "    xlims=(0, maximum(times)), xticks=0:2:20, label=\"\",\n",
        "    xtickfont=font(16, \"Courier\"), ytickfont=font(16, \"Courier\"),\n",
        "    xguidefontsize=18, yguidefontsize=18, linewidth=3,\n",
        "    linecolor=\"blue\", legend = true, labels= \"No Chemotherapy\")\n",
        "\n",
        "plot!(t -> MTSurv(t), xlims=(0, maximum(times)), \n",
        "    xguidefontsize=18, yguidefontsize=18, linewidth=3,\n",
        "    linecolor = \"red\", linestyle=:solid, legend = true, labels = \"Chemotherapy\")"
      ],
      "id": "7e929b2a",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "## Marginal hazards: Chemotherapy vs. No-Chemotherapy\n"
      ],
      "id": "14df8d22"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "# Marginal hazard function\n",
        "function NTMhaz(t)\n",
        "OUT = zeros(Float64, nNT, 3)\n",
        "for i in 1:nNT\n",
        "sol = solve(ODEProblem(HRJ, u0, t, paramsHR_MLE[indNT[i], :]), Tsit5())\n",
        "OUT[i, :] = reduce(vcat, sol.u[end, :])\n",
        "end\n",
        "\n",
        "mhaz = mean(exp.(-OUT[:, 3]) .* OUT[:, 1]) / mean(exp.(-OUT[:, 3]))\n",
        "\n",
        "return mhaz\n",
        "\n",
        "end\n",
        "\n",
        "\n",
        "\n",
        "#=\n",
        "====================================\n",
        "# Chemotherapy group\n",
        "===================================\n",
        "=#\n",
        "  \n",
        "\n",
        "# Marginal hazard function\n",
        "function TMhaz(t)\n",
        "OUT = zeros(Float64, nT, 3)\n",
        "for i in 1:nT\n",
        "sol = solve(ODEProblem(HRJ, u0, t, paramsHR_MLE[indT[i], :]), Tsit5())\n",
        "OUT[i, :] = reduce(vcat, sol.u[end, :])\n",
        "end\n",
        "\n",
        "mhaz = mean(exp.(-OUT[:, 3]) .* OUT[:, 1]) / mean(exp.(-OUT[:, 3]))\n",
        "\n",
        "return mhaz\n",
        "\n",
        "end"
      ],
      "id": "5d0cc510",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "plot(t -> NTMhaz(t),\n",
        "      xlabel=\"Time (years)\", ylabel=\"Hazard\", title=\"\",\n",
        "      xlims=(0, maximum(times)), xticks=0:2:20, label=\"\",\n",
        "      xtickfont=font(16, \"Courier\"), ytickfont=font(16, \"Courier\"),\n",
        "      xguidefontsize=18, yguidefontsize=18, linewidth=3,\n",
        "      linecolor=\"blue\", legend = true, labels= \"No Chemotherapy\")\n",
        "\n",
        "plot!(t -> TMhaz(t), xlims=(0, maximum(times)), \n",
        "      xguidefontsize=18, yguidefontsize=18, linewidth=3,\n",
        "      linecolor = \"red\", linestyle=:solid, legend = true, labels = \"Chemotherapy\")"
      ],
      "id": "b4da498f",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "## mean age + 0 size (<=50) + min nodes: Chemotherapy vs. No-Chemotherapy\n"
      ],
      "id": "785f75be"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "#--------------------------------------------------------------------------------------------------\n",
        "# : Chemotherapy vs. No-Chemotherapy\n",
        "#--------------------------------------------------------------------------------------------------\n",
        "\n",
        "# No Chemotherapy group\n",
        "valx_lNTE = [1.0, minimum(df.nodes), 0.0]\n",
        "valx_kNTE = [1.0, minimum(df.nodes)]\n",
        "valx_aNTE = [1.0, minimum(df.nodes), 0.0]\n",
        "valx_bNTE = [1.0, 0.0, 0.0, 0.0]\n",
        "\n",
        "lambdaNTE = exp.(valx_lNTE'MLER[1:p_l])\n",
        "kappaNTE = exp.(valx_kNTE'MLER[(p_l+1):(p_l+p_k)])\n",
        "alphaNTE = exp.(valx_aNTE'MLER[(p_l+p_k+1):(p_l+p_k+p_a)])\n",
        "betaNTE = exp.(valx_bNTE'MLER[(p_l+p_k+p_a+1):(p_l+p_k+p_a+p_b)])\n",
        "parNTE = [lambdaNTE[1], kappaNTE[1], alphaNTE[1], betaNTE[1]]\n",
        "\n",
        "# Chemotherapy group\n",
        "valx_lTE = [1.0, minimum(df.nodes), 1.0]\n",
        "valx_kTE = [1.0, minimum(df.nodes)]\n",
        "valx_aTE = [1.0, minimum(df.nodes), 1.0]\n",
        "valx_bTE = [1.0, 0.0, 0.0, 1.0]\n",
        "\n",
        "lambdaTE = exp.(valx_lTE'MLER[1:p_l])\n",
        "kappaTE = exp.(valx_kTE'MLER[(p_l+1):(p_l+p_k)])\n",
        "alphaTE = exp.(valx_aTE'MLER[(p_l+p_k+1):(p_l+p_k+p_a)])\n",
        "betaTE = exp.(valx_bTE'MLER[(p_l+p_k+p_a+1):(p_l+p_k+p_a+p_b)])\n",
        "parTE = [lambdaTE[1], kappaTE[1], alphaTE[1], betaTE[1]]\n",
        "\n",
        "# ODE solutions\n",
        "solNTE = solve(ODEProblem(HRJ, u0, 35.0, parNTE, Tsit5()),saveat=0.05);\n",
        "solTE = solve(ODEProblem(HRJ, u0, 35.0, parTE, Tsit5()),saveat=0.05);\n",
        "\n",
        "solNTE = solve(ODEProblem(HRJ, u0, 35.0, parNTE); alg_hints=[:stiff],saveat=0.05);\n",
        "solTE = solve(ODEProblem(HRJ, u0, 35.0, parTE); alg_hints=[:stiff],saveat=0.05);"
      ],
      "id": "69111cab",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "# Comparison: hazard functions\n",
        "plot(solNTE.t,hcat(solNTE.u...)[1,:],\n",
        "xlabel = \"Time (years)\", ylabel = \"Hazard\", title = \"\",\n",
        "xlims = (0.0,maximum(times)),   xticks = 0:5:35, label = \"\",\n",
        "xtickfont = font(16, \"Courier\"),  ytickfont = font(16, \"Courier\"),\n",
        "xguidefontsize=18, yguidefontsize=18, linewidth=3,\n",
        "linecolor = \"red\", ylims=(0, 0.1), linestyle=:solid,\n",
        "legend = true, labels = \"No Chemotherapy\")\n",
        "\n",
        "plot!(solTE.t,hcat(solTE.u...)[1,:], linewidth=3,\n",
        "linecolor = \"blue\", linestyle=:solid,\n",
        "legend = true, labels = \"Chemotherapy\")"
      ],
      "id": "ccc180bd",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "# Comparison: response functions\n",
        "plot(solNTE.t,hcat(solNTE.u...)[2,:],\n",
        "xlabel = \"Time (years)\", ylabel = \"Response\", title = \"\",\n",
        "xlims = (0.0,maximum(times)),   xticks = 0:5:35, label = \"\",\n",
        "xtickfont = font(16, \"Courier\"),  ytickfont = font(16, \"Courier\"),\n",
        "xguidefontsize=18, yguidefontsize=18, linewidth=3,\n",
        "linecolor = \"red\", ylims=(0, 3.0), linestyle=:solid,\n",
        "legend = true, labels = \"No Chemotherapy\")\n",
        "\n",
        "plot!(solTE.t,hcat(solTE.u...)[2,:], linewidth=3,\n",
        "linecolor = \"blue\", linestyle=:solid,\n",
        "legend = true, labels = \"Chemotherapy\")"
      ],
      "id": "5885521e",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "# Comparison: survival functions\n",
        "plot(solNTE.t,exp.(-hcat(solNTE.u...)[3,:]),\n",
        "xlabel = \"Time (years)\", ylabel = \"Survival\", title = \"\",\n",
        "xlims = (0.0,maximum(times)),   xticks = 0:5:35, label = \"\",\n",
        "xtickfont = font(16, \"Courier\"),  ytickfont = font(16, \"Courier\"),\n",
        "xguidefontsize=18, yguidefontsize=18, linewidth=3,\n",
        "linecolor = \"red\", ylims = (0,1), linestyle=:solid,\n",
        "legend = true, labels = \"No Chemotherapy\")\n",
        "\n",
        "plot!(solTE.t,exp.(-hcat(solTE.u...)[3,:]), linewidth=3,\n",
        "linecolor = \"blue\", linestyle=:solid,\n",
        "legend = true, labels = \"Chemotherapy\")"
      ],
      "id": "7ca7c054",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "## older age (1.5) + 1 size + larger number of nodes (3.0): Chemotherapy vs. No-Chemotherapy\n"
      ],
      "id": "56b8bee3"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "#--------------------------------------------------------------------------------------------------\n",
        "# : Chemotherapy vs. No-Chemotherapy\n",
        "#--------------------------------------------------------------------------------------------------\n",
        "\n",
        "# No Chemotherapy group\n",
        "valx_lNTL = [1.0, 3.0, 0.0]\n",
        "valx_kNTL = [1.0, 3.0]\n",
        "valx_aNTL = [1.0, 3.0, 0.0]\n",
        "valx_bNTL = [1.0, 1.5, 1.0, 0.0]\n",
        "\n",
        "\n",
        "lambdaNTL = exp.(valx_lNTL'MLER[1:p_l])\n",
        "kappaNTL = exp.(valx_kNTL'MLER[(p_l+1):(p_l+p_k)])\n",
        "alphaNTL = exp.(valx_aNTL'MLER[(p_l+p_k+1):(p_l+p_k+p_a)])\n",
        "betaNTL = exp.(valx_bNTL'MLER[(p_l+p_k+p_a+1):(p_l+p_k+p_a+p_b)])\n",
        "parNTL = [lambdaNTL[1], kappaNTL[1], alphaNTL[1], betaNTL[1]]\n",
        "\n",
        "# Chemotherapy group\n",
        "valx_lTL = [1.0, 3.0, 1.0]\n",
        "valx_kTL = [1.0, 3.0]\n",
        "valx_aTL = [1.0, 3.0, 1.0]\n",
        "valx_bTL = [1.0, 1.5, 1.0, 1.0]\n",
        "\n",
        "lambdaTL = exp.(valx_lTL'MLER[1:p_l])\n",
        "kappaTL = exp.(valx_kTL'MLER[(p_l+1):(p_l+p_k)])\n",
        "alphaTL = exp.(valx_aTL'MLER[(p_l+p_k+1):(p_l+p_k+p_a)])\n",
        "betaTL = exp.(valx_bTL'MLER[(p_l+p_k+p_a+1):(p_l+p_k+p_a+p_b)])\n",
        "parTL = [lambdaTL[1], kappaTL[1], alphaTL[1], betaTL[1]]\n",
        "\n",
        "# ODE solutions\n",
        "solNTL = solve(ODEProblem(HRJ, u0, 35.0, parNTL, Tsit5()),saveat=0.05);\n",
        "solTL = solve(ODEProblem(HRJ, u0, 35.0, parTL, Tsit5()),saveat=0.05);"
      ],
      "id": "63b5a54d",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "# Comparison: hazard functions\n",
        "plot(solNTL.t,hcat(solNTL.u...)[1,:],\n",
        "xlabel = \"Time (years)\", ylabel = \"Hazard\", title = \"\",\n",
        "xlims = (0.0,maximum(times)),   xticks = 0:5:35, label = \"\",\n",
        "xtickfont = font(16, \"Courier\"),  ytickfont = font(16, \"Courier\"),\n",
        "xguidefontsize=18, yguidefontsize=18, linewidth=3,\n",
        "linecolor = \"red\", ylims = (0,0.6), linestyle=:solid,\n",
        "legend = true, labels = \"No Chemotherapy\")\n",
        "\n",
        "plot!(solTL.t,hcat(solTL.u...)[1,:], linewidth=3,\n",
        "linecolor = \"blue\", linestyle=:solid,\n",
        "legend = true, labels = \"Chemotherapy\")"
      ],
      "id": "43a7217c",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "# Comparison: response functions\n",
        "plot(solNTL.t,hcat(solNTL.u...)[2,:],\n",
        "xlabel = \"Time (years)\", ylabel = \"Response\", title = \"\",\n",
        "xlims = (0.0,maximum(times)),   xticks = 0:5:35, label = \"\",\n",
        "xtickfont = font(16, \"Courier\"),  ytickfont = font(16, \"Courier\"),\n",
        "xguidefontsize=18, yguidefontsize=18, linewidth=3,\n",
        "linecolor = \"red\", ylims = (0,0.5), linestyle=:solid,\n",
        "legend = true, labels = \"No Chemotherapy\")\n",
        "\n",
        "plot!(solTL.t,hcat(solTL.u...)[2,:], linewidth=3,\n",
        "linecolor = \"blue\", linestyle=:solid,\n",
        "legend = true, labels = \"Chemotherapy\")"
      ],
      "id": "116a16a4",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "# Comparison: survival functions\n",
        "plot(solNTL.t,exp.(-hcat(solNTL.u...)[3,:]),\n",
        "xlabel = \"Time (years)\", ylabel = \"Survival\", title = \"\",\n",
        "xlims = (0.0,maximum(times)),   xticks = 0:5:35, label = \"\",\n",
        "xtickfont = font(16, \"Courier\"),  ytickfont = font(16, \"Courier\"),\n",
        "xguidefontsize=18, yguidefontsize=18, linewidth=3,\n",
        "linecolor = \"red\", ylims = (0,1), linestyle=:solid,\n",
        "legend = true, labels = \"No Chemotherapy\")\n",
        "\n",
        "plot!(solTL.t,exp.(-hcat(solTL.u...)[3,:]), linewidth=3,\n",
        "linecolor = \"blue\", linestyle=:solid,\n",
        "legend = true, labels = \"Chemotherapy\")"
      ],
      "id": "10e9dead",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "################################################################################\n",
        "################################################################################\n",
        "# Bayesian analysis\n",
        "################################################################################\n",
        "################################################################################\n",
        "\n",
        "\n",
        "## Marginal Posterior predictive survival: Chemotherapy vs. No-Chemotherapy\n"
      ],
      "id": "cc88f2e5"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "#--------------------------------------------------------------------------------------------------\n",
        "# Posterior Predictive survival: Chemotherapy vs. No-Chemotherapy\n",
        "# Averaged over covariates and poserior samples\n",
        "#--------------------------------------------------------------------------------------------------\n",
        "\n",
        "# Using the first k posterior samples for predictive inference\n",
        "k = 250;\n",
        "indp = 1:k;\n",
        "#postsampp = copy(postsamp_mcmc)[indp, :];\n",
        "postsampp = copy(postsamp_app)[indp, :];\n",
        "\n",
        "\n",
        "# All posterior parameters\n",
        "lambdap = exp.(postsampp[:, 1:p_l] * des_l')';\n",
        "kappap = exp.(postsampp[:, (p_l+1):(p_l+p_k)] * des_k')';\n",
        "alphap = exp.(postsampp[:, (p_l+p_k+1):(p_l+p_k+p_a)] * des_a')';\n",
        "betap = exp.(postsampp[:, (p_l+p_k+p_a+1):(p_l+p_k+p_a+p_b)] * des_b')';\n",
        "\n",
        "\n",
        "# Group 1: : No Chemotherapy\n",
        "\n",
        "function MNTPSurv(t)\n",
        "    # Function to calculate the individual survival\n",
        "    function indfuncNTPS(patID)\n",
        "\n",
        "        # Numerical solution for the ODE\n",
        "        paramsHR = hcat(lambdap[patID, :],\n",
        "            kappap[patID, :],\n",
        "            alphap[patID, :],\n",
        "            betap[patID, :])\n",
        "\n",
        "        OUT = zeros(Float64, k, 3)\n",
        "        for i in 1:k\n",
        "            sol = solve(ODEProblem(HRJ, u0, t, paramsHR[i, :]), Tsit5())\n",
        "            OUT[i, :] = reduce(vcat, sol.u[end, :])\n",
        "        end\n",
        "\n",
        "        surp = mean(exp.(-OUT[:, 3]))\n",
        "\n",
        "        return surp\n",
        "    end\n",
        "\n",
        "    out = mean(indfuncNTPS.(indNT))\n",
        "\n",
        "    return out\n",
        "end\n",
        "\n",
        "\n",
        "# Group 2: : Chemotherapy\n",
        "\n",
        "function MTPSurv(t)\n",
        "    # Function to calculate the individual survival\n",
        "    function indfuncTPS(patID)\n",
        "\n",
        "        # Numerical solution for the ODE\n",
        "        paramsHR = hcat(lambdap[patID, :],\n",
        "            kappap[patID, :],\n",
        "            alphap[patID, :],\n",
        "            betap[patID, :])\n",
        "\n",
        "        OUT = zeros(Float64, k, 3)\n",
        "        for i in 1:k\n",
        "            sol = solve(ODEProblem(HRJ, u0, t, paramsHR[i, :]), Tsit5())\n",
        "            OUT[i, :] = reduce(vcat, sol.u[end, :])\n",
        "        end\n",
        "\n",
        "        surp = mean(exp.(-OUT[:, 3]))\n",
        "\n",
        "        return surp\n",
        "    end\n",
        "\n",
        "    out = mean(indfuncTPS.(indT))\n",
        "\n",
        "    return out\n",
        "end\n",
        "\n",
        "# Grid of values\n",
        "tps = [0.01:0.5:20.5;]\n",
        "ntps = length(tps)\n",
        "\n",
        "NTP_tps =  zeros(ntps);\n",
        "for i in 1:ntps\n",
        "    NTP_tps[i] = MNTPSurv(tps[i])\n",
        "end\n",
        "\n",
        "TP_tps =  zeros(ntps);\n",
        "for i in 1:ntps\n",
        "    TP_tps[i] = MTPSurv(tps[i])\n",
        "end"
      ],
      "id": "e245820c",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "# Comparison\n",
        "plot(ktimesNT, ksurvival_probsNT,\n",
        "     xlabel = \"Time (years)\", ylabel = \"Predictive survival\", title = \"\",\n",
        "     xlims = (0.0001,maximum(times)),   xticks = 0:2:maximum(times), label = \"\", \n",
        "     xtickfont = font(16, \"Courier\"),  ytickfont = font(16, \"Courier\"),\n",
        "     xguidefontsize=18, yguidefontsize=18, linewidth=3,\n",
        "     linecolor = \"gray\", ylims = (0,1), linestyle=:solid)\n",
        "\n",
        "plot!(ktimesT, ksurvival_probsT,\n",
        "      xlabel = \"Time (years)\", ylabel = \"Predictive survival\", title = \"\",\n",
        "      xlims = (0.0001,maximum(times)),   xticks = 0:2:maximum(times), label = \"\", \n",
        "      xtickfont = font(16, \"Courier\"),  ytickfont = font(16, \"Courier\"),\n",
        "      xguidefontsize=18, yguidefontsize=18, linewidth=3,\n",
        "      linecolor = \"gray\", ylims = (0,1), linestyle=:solid)\n",
        "\n",
        "\n",
        "plot!(tps,NTP_tps,\n",
        "      xlabel=\"Time (years)\", ylabel=\"Predictive survival\", title=\"\",\n",
        "      xlims=(0, maximum(times)), xticks=0:2:20, label=\"\",\n",
        "      xtickfont=font(16, \"Courier\"), ytickfont=font(16, \"Courier\"),\n",
        "      xguidefontsize=18, yguidefontsize=18, linewidth=3,\n",
        "      linecolor=\"blue\", legend = true, labels= \"No Chemotherapy\")\n",
        "\n",
        "plot!(tps,TP_tps, xlims=(0, maximum(times)), \n",
        "      xguidefontsize=18, yguidefontsize=18, linewidth=3,\n",
        "      linecolor = \"red\", linestyle=:solid, legend = true, labels = \"Chemotherapy\")"
      ],
      "id": "d0899b9d",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "## Marginal Posterior predictive hazard: Chemotherapy vs. No-Chemotherapy\n"
      ],
      "id": "4bc858b4"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "# Group 1: : No Chemotherapy\n",
        "\n",
        "function NTPMHaz(t)\n",
        "    # Function to calculate the individual survival\n",
        "    function indfuncNTPS(patID)\n",
        "\n",
        "        # Numerical solution for the ODE\n",
        "        paramsHR = hcat(lambdap[patID, :],\n",
        "            kappap[patID, :],\n",
        "            alphap[patID, :],\n",
        "            betap[patID, :])\n",
        "\n",
        "        OUT = zeros(Float64, k, 3)\n",
        "        for i in 1:k\n",
        "            sol = solve(ODEProblem(HRJ, u0, t, paramsHR[i, :]), Tsit5())\n",
        "            OUT[i, :] = reduce(vcat, sol.u[end, :])\n",
        "        end\n",
        "\n",
        "        surp = mean(exp.(-OUT[:, 3]))\n",
        "\n",
        "        return surp\n",
        "    end\n",
        "    \n",
        "        function indfuncNTPden(patID)\n",
        "\n",
        "        # Numerical solution for the ODE\n",
        "        paramsHR = hcat(lambdap[patID, :],\n",
        "            kappap[patID, :],\n",
        "            alphap[patID, :],\n",
        "            betap[patID, :])\n",
        "\n",
        "        OUT = zeros(Float64, k, 3)\n",
        "        for i in 1:k\n",
        "            sol = solve(ODEProblem(HRJ, u0, t, paramsHR[i, :]), Tsit5())\n",
        "            OUT[i, :] = reduce(vcat, sol.u[end, :])\n",
        "        end\n",
        "\n",
        "        mden = mean(exp.(-OUT[:, 3]) .* OUT[:, 1])\n",
        "\n",
        "        return mden\n",
        "    end\n",
        "\n",
        "    out = mean(indfuncNTPden.(indNT))/mean(indfuncNTPS.(indNT))\n",
        "\n",
        "    return out\n",
        "end\n",
        "\n",
        "\n",
        "# Group 2: : Chemotherapy\n",
        "\n",
        "\n",
        "function TPMHaz(t)\n",
        "    # Function to calculate the individual survival\n",
        "    function indfuncTPS(patID)\n",
        "\n",
        "        # Numerical solution for the ODE\n",
        "        paramsHR = hcat(lambdap[patID, :],\n",
        "            kappap[patID, :],\n",
        "            alphap[patID, :],\n",
        "            betap[patID, :])\n",
        "\n",
        "        OUT = zeros(Float64, k, 3)\n",
        "        for i in 1:k\n",
        "            sol = solve(ODEProblem(HRJ, u0, t, paramsHR[i, :]), Tsit5())\n",
        "            OUT[i, :] = reduce(vcat, sol.u[end, :])\n",
        "        end\n",
        "\n",
        "        surp = mean(exp.(-OUT[:, 3]))\n",
        "\n",
        "        return surp\n",
        "    end\n",
        "    \n",
        "        function indfuncTPden(patID)\n",
        "\n",
        "        # Numerical solution for the ODE\n",
        "        paramsHR = hcat(lambdap[patID, :],\n",
        "            kappap[patID, :],\n",
        "            alphap[patID, :],\n",
        "            betap[patID, :])\n",
        "\n",
        "        OUT = zeros(Float64, k, 3)\n",
        "        for i in 1:k\n",
        "            sol = solve(ODEProblem(HRJ, u0, t, paramsHR[i, :]), Tsit5())\n",
        "            OUT[i, :] = reduce(vcat, sol.u[end, :])\n",
        "        end\n",
        "\n",
        "        mden = mean(exp.(-OUT[:, 3]) .* OUT[:, 1])\n",
        "\n",
        "        return mden\n",
        "    end\n",
        "\n",
        "    out = mean(indfuncTPden.(indT))/mean(indfuncTPS.(indT))\n",
        "\n",
        "    return out\n",
        "end\n",
        "\n",
        "# Grid of values\n",
        "x1 = range(0.01, 5.0, length=80) # More points in this range\n",
        "x2 = range(5.0, 20.0, length=20) # Fewer points here\n",
        "tph = vcat(x1, x2)\n",
        "ntph = length(tph)\n",
        "\n",
        "NTP_tph =  zeros(ntph);\n",
        "for i in 1:ntph\n",
        "    NTP_tph[i] = NTPMHaz(tph[i])\n",
        "end\n",
        "\n",
        "TP_tph =  zeros(ntph);\n",
        "for i in 1:ntph\n",
        "    TP_tph[i] = TPMHaz(tph[i])\n",
        "end"
      ],
      "id": "98e751ad",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "# Comparison\n",
        "\n",
        "plot(tph,NTP_tph,\n",
        "      xlabel=\"Time (years)\", ylabel=\"Predictive hazard\", title=\"\",\n",
        "      xlims=(0, maximum(times)), xticks=0:2:20, label=\"\",\n",
        "      xtickfont=font(16, \"Courier\"), ytickfont=font(16, \"Courier\"),\n",
        "      xguidefontsize=18, yguidefontsize=18, linewidth=3,\n",
        "      linecolor=\"blue\", legend = true, labels= \"No Chemotherapy\")\n",
        "\n",
        "plot!(tph,TP_tph, xlims=(0, maximum(times)), \n",
        "      xguidefontsize=18, yguidefontsize=18, linewidth=3,\n",
        "      linecolor = \"red\", linestyle=:solid, legend = true, labels = \"Chemotherapy\")"
      ],
      "id": "7e0ebf3a",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "## Marginal Posterior predictive response: Chemotherapy vs. No-Chemotherapy\n"
      ],
      "id": "172dde47"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "#--------------------------------------------------------------------------------------------------\n",
        "# Posterior Predictive response: Chemotherapy vs. No-Chemotherapy\n",
        "# Averaged over covariates and poserior samples\n",
        "#--------------------------------------------------------------------------------------------------\n",
        "\n",
        "# Group 1: : No Chemotherapy\n",
        "\n",
        "function MNTPResp(t)\n",
        "    # Function to calculate the individual survival\n",
        "    function indfuncNTPR(patID)\n",
        "\n",
        "        # Numerical solution for the ODE\n",
        "        paramsHR = hcat(lambdap[patID, :],\n",
        "            kappap[patID, :],\n",
        "            alphap[patID, :],\n",
        "            betap[patID, :])\n",
        "\n",
        "        OUT = zeros(Float64, k, 3)\n",
        "        for i in 1:k\n",
        "            sol = solve(ODEProblem(HRJ, u0, t, paramsHR[i, :]), Tsit5())\n",
        "            OUT[i, :] = reduce(vcat, sol.u[end, :])\n",
        "        end\n",
        "\n",
        "        resp = mean(OUT[:, 2])\n",
        "\n",
        "        return resp\n",
        "    end\n",
        "\n",
        "    out = mean(indfuncNTPR.(indNT))\n",
        "\n",
        "    return out\n",
        "end\n",
        "\n",
        "\n",
        "# Group 2: : Chemotherapy\n",
        "\n",
        "function MTPResp(t)\n",
        "    # Function to calculate the individual survival\n",
        "    function indfuncTPR(patID)\n",
        "\n",
        "        # Numerical solution for the ODE\n",
        "        paramsHR = hcat(lambdap[patID, :],\n",
        "            kappap[patID, :],\n",
        "            alphap[patID, :],\n",
        "            betap[patID, :])\n",
        "\n",
        "        OUT = zeros(Float64, k, 3)\n",
        "        for i in 1:k\n",
        "            sol = solve(ODEProblem(HRJ, u0, t, paramsHR[i, :]), Tsit5())\n",
        "            OUT[i, :] = reduce(vcat, sol.u[end, :])\n",
        "        end\n",
        "\n",
        "        resp = mean(OUT[:, 2])\n",
        "\n",
        "        return resp\n",
        "    end\n",
        "\n",
        "    out = mean(indfuncTPR.(indT))\n",
        "\n",
        "    return out\n",
        "end\n",
        "\n",
        "# Grid of values\n",
        "tpr1 = range(0.01, stop=5, length=25)\n",
        "tpr2 = range(5, stop=20, length=15)\n",
        "\n",
        "# Concatenate, removing duplicate at 5\n",
        "tpr = vcat(tpr1, tpr2[2:end])\n",
        "ntpr = length(tpr)\n",
        "\n",
        "NTP_tpr =  zeros(ntpr);\n",
        "for i in 1:ntpr\n",
        "    NTP_tpr[i] = MNTPResp(tpr[i])\n",
        "end\n",
        "\n",
        "TP_tpr =  zeros(ntpr);\n",
        "for i in 1:ntpr\n",
        "    TP_tpr[i] = MTPResp(tpr[i])\n",
        "end\n",
        "\n",
        "\n",
        "# Comparison\n",
        "\n",
        "plot(tpr,NTP_tpr,\n",
        "      xlabel=\"Time (years)\", ylabel=\"Predictive response\", title=\"\",\n",
        "      xlims=(0, maximum(times)), xticks=0:2:20, label=\"\",\n",
        "      xtickfont=font(16, \"Courier\"), ytickfont=font(16, \"Courier\"),\n",
        "      xguidefontsize=18, yguidefontsize=18, linewidth=3,\n",
        "      linecolor=\"blue\", legend = true, labels= \"No Chemotherapy\")\n",
        "\n",
        "plot!(tpr,TP_tpr, xlims=(0, maximum(times)),\n",
        "      xguidefontsize=18, yguidefontsize=18, linewidth=3,\n",
        "      linecolor = \"red\", linestyle=:solid, legend = true, labels = \"Chemotherapy\")"
      ],
      "id": "0ca21dbb",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "## Conditional analysis. mean age + 0 size (<=50) + min nodes: Chemotherapy vs. No-Chemotherapy\n",
        "\n",
        "### Posterior predictive hazard. \n"
      ],
      "id": "b36ffdae"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "#=\n",
        "--------------------------------------------------------------------------------------------------\n",
        "# Predictive hazard: Chemotherapy vs. No-Chemotherapy\n",
        "# Averaged over posterior samples, conditional on covariate values\n",
        "--------------------------------------------------------------------------------------------------\n",
        "=#\n",
        "\n",
        "# Posterior parameters : No Chemotherapy group\n",
        "lambdapNTE = exp.(postsampp[:, 1:p_l] * valx_lNTE)\n",
        "kappapNTE = exp.(postsampp[:, (p_l+1):(p_l+p_k)] * valx_kNTE)\n",
        "alphapNTE = exp.(postsampp[:, (p_l+p_k+1):(p_l+p_k+p_a)] * valx_aNTE)\n",
        "betapNTE = exp.(postsampp[:, (p_l+p_k+p_a+1):(p_l+p_k+p_a+p_b)] * valx_bNTE)\n",
        "parpNTE = hcat(lambdapNTE, kappapNTE, alphapNTE, betapNTE)\n",
        "\n",
        "# Posterior parameters : Chemotherapy group\n",
        "lambdapTE = exp.(postsampp[:, 1:p_l] * valx_lTE)\n",
        "kappapTE = exp.(postsampp[:, (p_l+1):(p_l+p_k)] * valx_kTE)\n",
        "alphapTE = exp.(postsampp[:, (p_l+p_k+1):(p_l+p_k+p_a)] * valx_aTE)\n",
        "betapTE = exp.(postsampp[:, (p_l+p_k+p_a+1):(p_l+p_k+p_a+p_b)] * valx_bTE)\n",
        "parpTE = hcat(lambdapTE, kappapTE, alphapTE, betapTE)\n",
        "\n",
        "# Predictive hazard: No Chemotherapy group\n",
        "function predHNTE(t)\n",
        "        # Numerical solution for the ODE\n",
        "\n",
        "        OUT = zeros(Float64, k, 3)\n",
        "        for i in 1:k\n",
        "            sol = solve(ODEProblem(HRJ, u0, t, parpNTE[i, :]), Tsit5())\n",
        "            OUT[i, :] = reduce(vcat, sol.u[end, :])\n",
        "        end\n",
        "\n",
        "        hpred = mean(exp.(-OUT[:, 3]) .* OUT[:, 1]) / mean(exp.(-OUT[:, 3]))\n",
        "\n",
        "        return hpred\n",
        "end\n",
        "\n",
        "\n",
        "# Predictive hazard: Chemotherapy group\n",
        "function predHTE(t)\n",
        "\n",
        "        OUT = zeros(Float64, k, 3)\n",
        "        for i in 1:k\n",
        "            sol = solve(ODEProblem(HRJ, u0, t, parpTE[i, :]), Tsit5())\n",
        "            OUT[i, :] = reduce(vcat, sol.u[end, :])\n",
        "        end\n",
        "\n",
        "        hpred = mean(exp.(-OUT[:, 3]) .* OUT[:, 1]) / mean(exp.(-OUT[:, 3]))\n",
        "\n",
        "        return hpred\n",
        "end\n",
        "\n",
        "\n",
        "\n",
        "# Comparison\n",
        "tvec = [0.01:0.1:20.5;]\n",
        "ntvec = length(tvec)\n",
        "\n",
        "\n",
        "phnte = zeros(ntvec);\n",
        "for i in 1:ntvec\n",
        "    phnte[i] = predHNTE(tvec[i])\n",
        "end\n",
        "\n",
        "phte = zeros(ntvec);\n",
        "for i in 1:ntvec\n",
        "    phte[i] = predHTE(tvec[i])\n",
        "end\n",
        "\n",
        "\n",
        "# Comparison: hazard functions\n",
        "plot(tvec,phnte,\n",
        "xlabel = \"Time (years)\", ylabel = \"Hazard\", title = \"Early\",\n",
        "xlims = (0.0,20),   xticks = 0:5:20, label = \"\",\n",
        "xtickfont = font(16, \"Courier\"),  ytickfont = font(16, \"Courier\"),\n",
        "xguidefontsize=18, yguidefontsize=18, linewidth=3,\n",
        "linecolor = \"red\", ylims = (0,0.1), linestyle=:solid,\n",
        "legend = true, labels = \"No Chemotherapy\")\n",
        "\n",
        "plot!(tvec,phte,\n",
        "xlabel = \"Time (years)\", ylabel = \"Hazard\", title = \"\",\n",
        "xlims = (0.0,20),   xticks = 0:5:20, label = \"\",\n",
        "xtickfont = font(16, \"Courier\"),  ytickfont = font(16, \"Courier\"),\n",
        "xguidefontsize=18, yguidefontsize=18, linewidth=3,\n",
        "linecolor = \"blue\", ylims = (0,0.1), linestyle=:solid,\n",
        "legend = true, labels = \"Chemotherapy\")"
      ],
      "id": "1ff5ce91",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "### Response functions\n"
      ],
      "id": "3d9288c4"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "# Predictive response: No Chemotherapy group\n",
        "function predRNTE(t)\n",
        "        # Numerical solution for the ODE\n",
        "\n",
        "        OUT = zeros(Float64, k, 3)\n",
        "        for i in 1:k\n",
        "            sol = solve(ODEProblem(HRJ, u0, t, parpNTE[i, :]), Tsit5())\n",
        "            OUT[i, :] = reduce(vcat, sol.u[end, :])\n",
        "        end\n",
        "\n",
        "        rpred = mean(OUT[:, 2]) \n",
        "\n",
        "        return rpred\n",
        "end\n",
        "\n",
        "\n",
        "# Predictive response: Chemotherapy group\n",
        "function predRTE(t)\n",
        "\n",
        "        OUT = zeros(Float64, k, 3)\n",
        "        for i in 1:k\n",
        "            sol = solve(ODEProblem(HRJ, u0, t, parpTE[i, :]), Tsit5())\n",
        "            OUT[i, :] = reduce(vcat, sol.u[end, :])\n",
        "        end\n",
        "\n",
        "        rpred = mean(OUT[:, 2]) \n",
        "\n",
        "        return rpred\n",
        "end\n",
        "\n",
        "\n",
        "\n",
        "prnte = zeros(ntvec);\n",
        "for i in 1:ntvec\n",
        "    prnte[i] = predRNTE(tvec[i])\n",
        "end\n",
        "\n",
        "prte = zeros(ntvec);\n",
        "for i in 1:ntvec\n",
        "    prte[i] = predRTE(tvec[i])\n",
        "end\n",
        "\n",
        "\n",
        "# Comparison: response functions\n",
        "plot(tvec,prnte,\n",
        "xlabel = \"Time (years)\", ylabel = \"Response\", title = \"Early\",\n",
        "xlims = (0.0,20),   xticks = 0:5:20, label = \"\",\n",
        "xtickfont = font(16, \"Courier\"),  ytickfont = font(16, \"Courier\"),\n",
        "xguidefontsize=18, yguidefontsize=18, linewidth=3,\n",
        "linecolor = \"red\", ylims = (0,2.75), linestyle=:solid,\n",
        "legend = true, labels = \"No Chemotherapy\")\n",
        "\n",
        "plot!(tvec,prte,\n",
        "xlabel = \"Time (years)\", ylabel = \"Response\", title = \"\",\n",
        "xlims = (0.0,20),   xticks = 0:5:20, label = \"\",\n",
        "xtickfont = font(16, \"Courier\"),  ytickfont = font(16, \"Courier\"),\n",
        "xguidefontsize=18, yguidefontsize=18, linewidth=3,\n",
        "linecolor = \"blue\", ylims = (0,2.75), linestyle=:solid,\n",
        "legend = true, labels = \"Chemotherapy\")"
      ],
      "id": "20e4b592",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "### Predictive survival functions\n"
      ],
      "id": "213257e7"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "# Predictive survival: No Chemotherapy group\n",
        "function predSNTE(t)\n",
        "        # Numerical solution for the ODE\n",
        "\n",
        "        OUT = zeros(Float64, k, 3)\n",
        "        for i in 1:k\n",
        "            sol = solve(ODEProblem(HRJ, u0, t, parpNTE[i, :]), Tsit5())\n",
        "            OUT[i, :] = reduce(vcat, sol.u[end, :])\n",
        "        end\n",
        "\n",
        "        spred = mean(exp.(-OUT[:, 3])) \n",
        "\n",
        "        return spred\n",
        "end\n",
        "\n",
        "\n",
        "# Predictive survival: Chemotherapy group\n",
        "function predSTE(t)\n",
        "\n",
        "        OUT = zeros(Float64, k, 3)\n",
        "        for i in 1:k\n",
        "            sol = solve(ODEProblem(HRJ, u0, t, parpTE[i, :]), Tsit5())\n",
        "            OUT[i, :] = reduce(vcat, sol.u[end, :])\n",
        "        end\n",
        "\n",
        "        spred = mean(exp.(-OUT[:, 3])) \n",
        "\n",
        "        return spred\n",
        "end\n",
        "\n",
        "\n",
        "\n",
        "psnte = zeros(ntvec);\n",
        "for i in 1:ntvec\n",
        "    psnte[i] = predSNTE(tvec[i])\n",
        "end\n",
        "\n",
        "pste = zeros(ntvec);\n",
        "for i in 1:ntvec\n",
        "    pste[i] = predSTE(tvec[i])\n",
        "end\n",
        "\n",
        "\n",
        "# Comparison: survival functions\n",
        "plot(tvec,psnte,\n",
        "xlabel = \"Time (years)\", ylabel = \"Survival\", title = \"Early\",\n",
        "xlims = (0.0,20),   xticks = 0:5:20, label = \"\",\n",
        "xtickfont = font(16, \"Courier\"),  ytickfont = font(16, \"Courier\"),\n",
        "xguidefontsize=18, yguidefontsize=18, linewidth=3,\n",
        "linecolor = \"red\", ylims = (0,1), linestyle=:solid,\n",
        "legend = true, labels = \"No Chemotherapy\")\n",
        "\n",
        "plot!(tvec,pste,\n",
        "xlabel = \"Time (years)\", ylabel = \"Survival\", title = \"\",\n",
        "xlims = (0.0,20),   xticks = 0:5:20, label = \"\",\n",
        "xtickfont = font(16, \"Courier\"),  ytickfont = font(16, \"Courier\"),\n",
        "xguidefontsize=18, yguidefontsize=18, linewidth=3,\n",
        "linecolor = \"blue\", ylims = (0,1), linestyle=:solid,\n",
        "legend = true, labels = \"Chemotherapy\")"
      ],
      "id": "fd65cf93",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "## Conditional analysis. older age (1.5) + 1 size + larger number of nodes (3.0): Chemotherapy vs. No-Chemotherapy\n",
        "\n",
        "\n",
        "### Predictive hazards\n"
      ],
      "id": "19187d1b"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "#=\n",
        "--------------------------------------------------------------------------------------------------\n",
        "# Predictive hazard: Chemotherapy vs. No-Chemotherapy\n",
        "--------------------------------------------------------------------------------------------------\n",
        "=#\n",
        "\n",
        "# Posterior parameters : No Chemotherapy group\n",
        "lambdapNTL = exp.(postsampp[:,1:p_l] * valx_lNTL)\n",
        "kappapNTL = exp.(postsampp[:,(p_l+1):(p_l+p_k)] * valx_kNTL)\n",
        "alphapNTL = exp.(postsampp[:,(p_l+p_k+1):(p_l+p_k+p_a)] * valx_aNTL)\n",
        "betapNTL = exp.(postsampp[:,(p_l+p_k+p_a+1):(p_l+p_k+p_a+p_b)] * valx_bNTL)\n",
        "parpNTL = hcat(lambdapNTL, kappapNTL, alphapNTL, betapNTL)\n",
        "\n",
        "# Posterior parameters : Chemotherapy group\n",
        "lambdapTL = exp.(postsampp[:,1:p_l] * valx_lTL)\n",
        "kappapTL = exp.(postsampp[:,(p_l+1):(p_l+p_k)] * valx_kTL)\n",
        "alphapTL = exp.(postsampp[:,(p_l+p_k+1):(p_l+p_k+p_a)] * valx_aTL)\n",
        "betapTL = exp.(postsampp[:,(p_l+p_k+p_a+1):(p_l+p_k+p_a+p_b)] * valx_bTL)\n",
        "parpTL = hcat(lambdapTL, kappapTL, alphapTL, betapTL)\n",
        "\n",
        "# Predictive hazard: No Chemotherapy group\n",
        "function predHNTL(t)\n",
        "\n",
        "    OUT = zeros(Float64, k, 3)\n",
        "    for i in 1:k\n",
        "        sol = solve(ODEProblem(HRJ, u0, t, parpNTL[i, :]), Tsit5())\n",
        "        OUT[i, :] = reduce(vcat, sol.u[end, :])\n",
        "    end\n",
        "\n",
        "    hpred = mean(exp.(-OUT[:, 3]).*OUT[:,1] ) / mean(exp.(-OUT[:, 3]) )\n",
        "\n",
        "    return hpred\n",
        "    end\n",
        "\n",
        "\n",
        "# Predictive hazard: Chemotherapy group\n",
        "function predHTL(t)\n",
        "\n",
        "    OUT = zeros(Float64, k, 3)\n",
        "    for i in 1:k\n",
        "        sol = solve(ODEProblem(HRJ, u0, t, parpTL[i, :]), Tsit5())\n",
        "        OUT[i, :] = reduce(vcat, sol.u[end, :])\n",
        "    end\n",
        "\n",
        "    hpred = mean(exp.(-OUT[:, 3]).*OUT[:,1] ) / mean(exp.(-OUT[:, 3]) )\n",
        "\n",
        "    return hpred\n",
        "    end\n",
        "\n",
        "\n",
        "\n",
        "# Comparison\n",
        "phntl = zeros(ntvec)\n",
        "for i in 1:ntvec\n",
        "    phntl[i] = predHNTL(tvec[i])\n",
        "end\n",
        "\n",
        "\n",
        "\n",
        "phtl = zeros(ntvec)\n",
        "for i in 1:ntvec\n",
        "    phtl[i] = predHTL(tvec[i])\n",
        "end\n",
        "\n",
        "\n",
        "# Comparison: hazard functions\n",
        "plot(tvec,phntl,\n",
        "xlabel = \"Time (years)\", ylabel = \"Hazard\", title = \"Late\",\n",
        "xlims = (0.0,20),   xticks = 0:5:20, label = \"\",\n",
        "xtickfont = font(16, \"Courier\"),  ytickfont = font(16, \"Courier\"),\n",
        "xguidefontsize=18, yguidefontsize=18, linewidth=3,\n",
        "linecolor = \"red\", ylims = (0,0.6), linestyle=:solid,\n",
        "legend = true, labels = \"No Chemotherapy\")\n",
        "\n",
        "plot!(tvec,phtl,\n",
        "xlabel = \"Time (years)\", ylabel = \"Hazard\", title = \"\",\n",
        "xlims = (0.0,20),   xticks = 0:5:20, label = \"\",\n",
        "xtickfont = font(16, \"Courier\"),  ytickfont = font(16, \"Courier\"),\n",
        "xguidefontsize=18, yguidefontsize=18, linewidth=3,\n",
        "linecolor = \"blue\", ylims = (0,0.6), linestyle=:solid,\n",
        "legend = true, labels = \"Chemotherapy\")"
      ],
      "id": "f5c2d02b",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "### Predictive responses\n"
      ],
      "id": "e57a7a33"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "#=\n",
        "--------------------------------------------------------------------------------------------------\n",
        "# Predictive response: Chemotherapy vs. No-Chemotherapy\n",
        "--------------------------------------------------------------------------------------------------\n",
        "=#\n",
        "\n",
        "\n",
        "# Predictive response: No Chemotherapy group\n",
        "function predRNTL(t)\n",
        "\n",
        "    OUT = zeros(Float64, k, 3)\n",
        "    for i in 1:k\n",
        "        sol = solve(ODEProblem(HRJ, u0, t, parpNTL[i, :]), Tsit5())\n",
        "        OUT[i, :] = reduce(vcat, sol.u[end, :])\n",
        "    end\n",
        "\n",
        "        rpred = mean(OUT[:, 2]) \n",
        "\n",
        "        return rpred\n",
        "    end\n",
        "\n",
        "\n",
        "# Predictive response: Chemotherapy group\n",
        "function predRTL(t)\n",
        "\n",
        "    OUT = zeros(Float64, k, 3)\n",
        "    for i in 1:k\n",
        "        sol = solve(ODEProblem(HRJ, u0, t, parpTL[i, :]), Tsit5())\n",
        "        OUT[i, :] = reduce(vcat, sol.u[end, :])\n",
        "    end\n",
        "\n",
        "        rpred = mean(OUT[:, 2]) \n",
        "\n",
        "        return rpred\n",
        "    end\n",
        "\n",
        "\n",
        "\n",
        "# Comparison\n",
        "prntl = zeros(ntvec)\n",
        "for i in 1:ntvec\n",
        "    prntl[i] = predRNTL(tvec[i])\n",
        "end\n",
        "\n",
        "\n",
        "\n",
        "prtl = zeros(ntvec)\n",
        "for i in 1:ntvec\n",
        "    prtl[i] = predRTL(tvec[i])\n",
        "end\n",
        "\n",
        "\n",
        "# Comparison: hazard functions\n",
        "plot(tvec,prntl,\n",
        "xlabel = \"Time (years)\", ylabel = \"Response\", title = \"Late\",\n",
        "xlims = (0.0,20),   xticks = 0:5:20, label = \"\",\n",
        "xtickfont = font(16, \"Courier\"),  ytickfont = font(16, \"Courier\"),\n",
        "xguidefontsize=18, yguidefontsize=18, linewidth=3,\n",
        "linecolor = \"red\", ylims = (0,0.5), linestyle=:solid,\n",
        "legend = true, labels = \"No Chemotherapy\")\n",
        "\n",
        "plot!(tvec,prtl,\n",
        "xlabel = \"Time (years)\", ylabel = \"Response\", title = \"\",\n",
        "xlims = (0.0,20),   xticks = 0:5:20, label = \"\",\n",
        "xtickfont = font(16, \"Courier\"),  ytickfont = font(16, \"Courier\"),\n",
        "xguidefontsize=18, yguidefontsize=18, linewidth=3,\n",
        "linecolor = \"blue\", ylims = (0,0.5), linestyle=:solid,\n",
        "legend = true, labels = \"Chemotherapy\")"
      ],
      "id": "ca2ab4e5",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "### Predictive survival\n"
      ],
      "id": "27da0429"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "#=\n",
        "--------------------------------------------------------------------------------------------------\n",
        "# Predictive survival: Chemotherapy vs. No-Chemotherapy\n",
        "--------------------------------------------------------------------------------------------------\n",
        "=#\n",
        "\n",
        "\n",
        "# Predictive survival: No Chemotherapy group\n",
        "function predSNTL(t)\n",
        "\n",
        "    OUT = zeros(Float64, k, 3)\n",
        "    for i in 1:k\n",
        "        sol = solve(ODEProblem(HRJ, u0, t, parpNTL[i, :]), Tsit5())\n",
        "        OUT[i, :] = reduce(vcat, sol.u[end, :])\n",
        "    end\n",
        "        spred = mean(exp.(-OUT[:, 3])) \n",
        "\n",
        "        return spred\n",
        "    end\n",
        "\n",
        "\n",
        "# Predictive survival: Chemotherapy group\n",
        "function predSTL(t)\n",
        "\n",
        "    OUT = zeros(Float64, k, 3)\n",
        "    for i in 1:k\n",
        "        sol = solve(ODEProblem(HRJ, u0, t, parpTL[i, :]), Tsit5())\n",
        "        OUT[i, :] = reduce(vcat, sol.u[end, :])\n",
        "    end\n",
        "\n",
        "        spred = mean(exp.(-OUT[:, 3])) \n",
        "\n",
        "        return spred\n",
        "    end\n",
        "\n",
        "\n",
        "\n",
        "# Comparison\n",
        "psntl = zeros(ntvec)\n",
        "for i in 1:ntvec\n",
        "    psntl[i] = predSNTL(tvec[i])\n",
        "end\n",
        "\n",
        "\n",
        "\n",
        "pstl = zeros(ntvec)\n",
        "for i in 1:ntvec\n",
        "    pstl[i] = predSTL(tvec[i])\n",
        "end\n",
        "\n",
        "\n",
        "# Comparison: hazard functions\n",
        "plot(tvec,psntl,\n",
        "xlabel = \"Time (years)\", ylabel = \"Survival\", title = \"Late\",\n",
        "xlims = (0.0,20),   xticks = 0:5:20, label = \"\",\n",
        "xtickfont = font(16, \"Courier\"),  ytickfont = font(16, \"Courier\"),\n",
        "xguidefontsize=18, yguidefontsize=18, linewidth=3,\n",
        "linecolor = \"red\", ylims = (0,1), linestyle=:solid,\n",
        "legend = true, labels = \"No Chemotherapy\")\n",
        "\n",
        "plot!(tvec,pstl,\n",
        "xlabel = \"Time (years)\", ylabel = \"Survival\", title = \"\",\n",
        "xlims = (0.0,20),   xticks = 0:5:20, label = \"\",\n",
        "xtickfont = font(16, \"Courier\"),  ytickfont = font(16, \"Courier\"),\n",
        "xguidefontsize=18, yguidefontsize=18, linewidth=3,\n",
        "linecolor = \"blue\", ylims = (0,1), linestyle=:solid,\n",
        "legend = true, labels = \"Chemotherapy\")"
      ],
      "id": "43189421",
      "execution_count": null,
      "outputs": []
    }
  ],
  "metadata": {
    "kernelspec": {
      "name": "julia-1.11",
      "language": "julia",
      "display_name": "Julia 1.11.3",
      "path": "/Users/javierrubio/Library/Jupyter/kernels/julia-1.11"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 5
}